// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, Composable, TDataShape, Client } from '@hey-api/client-nuxt';
import type { GoNuxtCreateUserData, GoNuxtCreateUserResponse, GoNuxtCreateUserError, GoNuxtLoginUserData, GoNuxtLoginUserResponse, GoNuxtLoginUserError, GoNuxtRefreshTokenData, GoNuxtRefreshTokenResponse, GoNuxtRefreshTokenError, GoNuxtUpdateUserData, GoNuxtUpdateUserResponse, GoNuxtUpdateUserError } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TComposable extends Composable, TData extends TDataShape = TDataShape, ResT = unknown, DefaultT = undefined> = ClientOptions<TComposable, TData, ResT, DefaultT> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export const goNuxtCreateUser = <TComposable extends Composable, DefaultT extends GoNuxtCreateUserResponse = GoNuxtCreateUserResponse>(options: Options<TComposable, GoNuxtCreateUserData, GoNuxtCreateUserResponse, DefaultT>) => {
    return (options.client ?? _heyApiClient).post<TComposable, GoNuxtCreateUserResponse | DefaultT, GoNuxtCreateUserError, DefaultT>({
        url: '/v1/create_user',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const goNuxtLoginUser = <TComposable extends Composable, DefaultT extends GoNuxtLoginUserResponse = GoNuxtLoginUserResponse>(options: Options<TComposable, GoNuxtLoginUserData, GoNuxtLoginUserResponse, DefaultT>) => {
    return (options.client ?? _heyApiClient).post<TComposable, GoNuxtLoginUserResponse | DefaultT, GoNuxtLoginUserError, DefaultT>({
        url: '/v1/login_user',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const goNuxtRefreshToken = <TComposable extends Composable, DefaultT extends GoNuxtRefreshTokenResponse = GoNuxtRefreshTokenResponse>(options: Options<TComposable, GoNuxtRefreshTokenData, GoNuxtRefreshTokenResponse, DefaultT>) => {
    return (options.client ?? _heyApiClient).post<TComposable, GoNuxtRefreshTokenResponse | DefaultT, GoNuxtRefreshTokenError, DefaultT>({
        url: '/v1/refresh_token',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const goNuxtUpdateUser = <TComposable extends Composable, DefaultT extends GoNuxtUpdateUserResponse = GoNuxtUpdateUserResponse>(options: Options<TComposable, GoNuxtUpdateUserData, GoNuxtUpdateUserResponse, DefaultT>) => {
    return (options.client ?? _heyApiClient).patch<TComposable, GoNuxtUpdateUserResponse | DefaultT, GoNuxtUpdateUserError, DefaultT>({
        url: '/v1/update_user',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};